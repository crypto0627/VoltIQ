---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
type: Opaque
data:
  mongo-root-username: YWRtaW4=  # admin
  mongo-root-password: cGFzc3dvcmQxMjM=  # password123

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init
data:
  init-mongo.js: |
    rs.initiate(
      {
        _id : "rs0",
        members: [
          { _id: 0, host: "mongodb-replica-set-0.mongodb-replica-set:27017" },
          { _id: 1, host: "mongodb-replica-set-1.mongodb-replica-set:27017" },
          { _id: 2, host: "mongodb-replica-set-2.mongodb-replica-set:27017" }
        ]
      }
    )

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-replica-set
spec:
  serviceName: "mongodb-replica-set"
  replicas: 3
  selector:
    matchLabels:
      app: mongodb-replica-set
  template:
    metadata:
      labels:
        app: mongodb-replica-set
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0.14
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        - name: MONGO_REPLICA_SET_NAME
          value: rs0
      volumes:
      - name: mongodb-init-scripts
        configMap:
          name: mongodb-init
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-replica-set
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: mongodb-replica-set

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express:1.0.2-20-alpine3.19
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_URL
          value: "mongodb://admin:password123@mongodb-replica-set-0.mongodb-replica-set:27017,mongodb-replica-set-1.mongodb-replica-set:27017,mongodb-replica-set-2.mongodb-replica-set:27017/?replicaSet=rs0"
        - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
          value: "true"
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
spec:
  ports:
  - port: 8081
    targetPort: 8081
  selector:
    app: mongo-express
  type: LoadBalancer
