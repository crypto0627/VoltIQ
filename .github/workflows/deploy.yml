name: Deploy Frontend to Docker & ArgoCD

on:
  push:
    branches:
      - main
    paths:
      - "apps/frontend/**"
      - ".github/workflows/deploy.yml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: frontend
      REGISTRY: docker.io
      USERNAME: ${{ secrets.DOCKER_USERNAME }}
      PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      REPO: voltiq

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/frontend
          file: ./apps/frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Set up Kind Cluster
        uses: helm/kind-action@v1.1.0

      - name: Create ArgoCD Namespace
        run: kubectl create namespace argocd || true

      - name: Install ArgoCD
        run: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: Wait for ArgoCD to be ready
        run: |
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-applicationset-controller -n argocd
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-repo-server -n argocd
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-dex-server -n argocd
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-redis -n argocd

      - name: Deploy Root App
        run: kubectl apply -f infra/k8s/argocd/root-app.yaml -n argocd

